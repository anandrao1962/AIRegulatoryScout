version: '3.8'

services:
  postgres-staging:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: agentic_rag_staging
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-stagingpassword123}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - staging-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d agentic_rag_staging"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  app-staging:
    build: 
      context: .
      target: production
    ports:
      - "5001:5000"
    env_file:
      - .env.staging
    environment:
      NODE_ENV: staging
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-stagingpassword123}@postgres-staging:5432/agentic_rag_staging
    depends_on:
      postgres-staging:
        condition: service_healthy
    networks:
      - staging-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

networks:
  staging-network:
    driver: bridge

volumes:
  postgres_staging_data:
    driver: local